{"version":3,"sources":["webpack:///./index.js"],"names":["CountdownTimer","constructor","selector","targetDate","this","refs","days","document","querySelector","hours","mins","secs","timerFase","start","setInterval","currentTime","Date","now","time","deltatime","getTimeComponents","updateTimerface","console","log","innerHTML","pad","Math","floor","value","String","padStart"],"mappings":"kHAAA,yDACe,MAAMA,EAEnBC,aAAY,SAAEC,EAAF,WAAYC,IACtBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAGlBC,KAAKC,KAAO,CACVC,KAAMC,SAASC,cAAiBN,EAAF,wBAC9BO,MAAOF,SAASC,cAAiBN,EAAF,yBAC/BQ,KAAMH,SAASC,cAAiBN,EAAF,wBAC9BS,KAAMJ,SAASC,cAAiBN,EAAF,wBAC9BU,UAAWL,SAASC,cAAc,WAEnCJ,KAAKS,QAGRA,QACEC,YAAY,KACV,MAAMC,EAAcC,KAAKC,MACnBC,EAAOd,KAAKD,WAAaY,EACzBI,EAAYf,KAAKgB,kBAAkB,CAACF,SAC1Cd,KAAKiB,gBAAgBF,GACrBG,QAAQC,IAAIJ,IACX,KAILE,iBAAgB,KAAEf,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,IACnCP,KAAKC,KAAKC,KAAKkB,UAAYlB,EAC3BF,KAAKC,KAAKI,MAAMe,UAAYf,EAC5BL,KAAKC,KAAKK,KAAKc,UAAYd,EAC3BN,KAAKC,KAAKM,KAAKa,UAAYb,EAG7BS,mBAAkB,KAACF,IAKjB,MAAO,CAAEZ,KAJIF,KAAKqB,IAAIC,KAAKC,MAAMT,EAAO,QAIzBT,MAHDL,KAAKqB,IAAIC,KAAKC,MAAOT,EAAO,MAAR,OAGZR,KAFTN,KAAKqB,IAAIC,KAAKC,MAAOT,EAAO,KAAR,MAELP,KADfP,KAAKqB,IAAIC,KAAKC,MAAOT,EAAO,IAAe,OAI1DO,IAAIG,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,MAOvB,IAAI9B,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIa,KAAK,kBAKN,IAAIhB,EAAe,CAChCE,SAAU,WACXC,WAAY,IAAIa,KAAK,oB","file":"main.dc5f0e4bb7405c87f07a.js","sourcesContent":["import './styles.css'; \nexport default class CountdownTimer {\n  \n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n      \n\n    this.refs = {\n      days: document.querySelector(`${selector} [data-value=\"days\"]`),\n      hours: document.querySelector(`${selector} [data-value=\"hours\"]`),\n      mins: document.querySelector(`${selector} [data-value=\"mins\"]`),\n      secs: document.querySelector(`${selector} [data-value=\"secs\"]`),\n      timerFase: document.querySelector('.timer'),\n    };\n     this.start();\n  }\n\n  start() {\n    setInterval(() => {\n      const currentTime = Date.now();\n      const time = this.targetDate - currentTime;\n      const deltatime = this.getTimeComponents({time});\n      this.updateTimerface(deltatime);\n      console.log(deltatime);\n    }, 1000);\n    \n  }\n\n  updateTimerface({ days, hours, mins, secs }) {     \n    this.refs.days.innerHTML = days;\n    this.refs.hours.innerHTML = hours;\n    this.refs.mins.innerHTML = mins;\n    this.refs.secs.innerHTML = secs;\n  }\n\n  getTimeComponents({time}) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    return { days, hours, mins, secs };\n  }\n  \n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n  \n}\n\n\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1', \n  targetDate: new Date('Dec 31, 2020'),  \n});\n\n\n\n const timer_e = new CountdownTimer({\n    selector: '#timer-2', \n   targetDate: new Date('Feb 17, 2021'),\n });\n \n\n"],"sourceRoot":""}